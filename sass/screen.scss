// Physical colors:

$gray0: #202020;
$gray1: #333333;
$gray2: #444444;
$gray3: #646464;
$gray4: #a0a0a0;
$gray5: #c8c8c8;
$gray6: #e0e0e0;
$gray7: #f9f9f9;

$paletteA: #c3669c;
$paletteB: #c2e578;
$paletteC: #626ca8;
$paletteD: #f5c680;


// Logical colors:

$bgColor: $gray2;
$graphBgColor: $gray1;
$gridColor: $bgColor;

$typeColor1: $paletteA;
$typeColor2: $paletteB;
$typeColor3: $paletteC;
$vertexBgColor: $paletteD;

$fgColorDark: $gray0;
$vertexBorderColor: $gray4;

$unHighlightColor: $gray3;

$nodeBorderColor: $gray5;
$nodeShadowColor: $gray0;

$textColor: $gray6;
$portTextColor: $gray0;


// Sizes:
$nodeTitleHeight: 18px;
$portAnchorSize: 11px;
$portHeight: 16px;

$edgeNodeSize: 30px;

$fontFamilyLabel: "Futura", "Helvetica Neue", "Verdana", sans-serif;
$fontSizeLabel: 12px;
$fontFamilyPort: "Gill Sans", "Helvetica Neue", "Arial", sans-serif;
$fontSizePort: 11px;

body {
   background: $bgColor;
}

[data-ng-cloak] {
   display: none !important;
}

.graph {

   .links {
      width: 100%;
      height: 100%;
      background:
         linear-gradient(
               0deg,
               transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%,
               transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%,
               transparent),
         linear-gradient(
               90deg,
               transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%,
               transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%,
               transparent);
      background-size: 50px 50px;
   }

   background: $graphBgColor;
   border-radius: 10px;
   position: absolute;
   top: 20px;
   left: 20px;
   right: 20px;
   bottom: 20px;

   font-family: $fontFamilyLabel;
   font-size: $fontSizeLabel;
   color: $textColor;

   * {
      user-select: none;
      -moz-user-select: none;
      -webkit-user-select: none;
      cursor: default;
   }

   .port {
      i {
         width: $portAnchorSize;
         height: $portAnchorSize;
         background: $typeColor1;
         border: solid $gray2 1px;
         border-radius: 6px;
         margin: 3px 5px -3px 5px;
         display: inline-block;
         position: relative;
      }
      i:hover {
         opacity: 0.5;
      }
   }

   .node {
      position: absolute;
      border: solid $nodeBorderColor 1.5px;

      &.vertex {
         box-shadow: 4px 4px 6px $nodeShadowColor;

         border-radius: 10px;
         background: -moz-linear-gradient(left top,
            $vertexBgColor 0%, darken($vertexBgColor, 30%) 100%);
         background: -webkit-gradient(linear, left top, right bottom,
            color-stop(0%, $vertexBgColor), color-stop(100%, darken($vertexBgColor, 30%)));

         .header {
            border-radius: 10px 10px 0px 0px;
            height: $nodeTitleHeight;
            text-align: center;
            background: rgba(0, 0, 0, 0.15);
            padding: 2px 5px 1px 5px;
            font-size: $fontSizeLabel;
            font-family: $fontFamilyLabel;
            text-shadow: 1px 1px 0.5px $gray2;
         }

         .port-group {

            background: rgba(0, 0, 0, 0.05);
            border-top: solid $nodeBorderColor 1px;

            // Flex container:
            display: -webkit-flex;
            -webkit-flex-direction: row;
            -webkit-align-items: flex-start;

            .ports {
               // Flex item:
               -webkit-flex: 0 1 auto;

               // Flex container:
               display: -webkit-flex;
               -webkit-flex-flow: column;
               -webkit-justify-content: stretch;

               .port {
                  -webkit-flex: 0 1 auto;
                  line-height: $portHeight;
                  padding-top: 0;
                  color: $portTextColor;
                  font-size: $fontSizePort;
                  font-family: $fontFamilyPort;
                  text-shadow: 0 0 2px $gray7;
               }

               .port {
                  white-space: nowrap;
               }

               &.in {
                  border-right: 1px solid $gray4;
                  -webkit-align-items: flex-start;
                  .port { text-align: left; padding-right: 9px; }
               }

               &.out {
                  -webkit-align-items: flex-end;
                  .port { text-align: right; padding-left: 9px; }
               }
            }
         }
      }

      // Default edge-node style;
      &.edge {
         width: $edgeNodeSize;
         height: $edgeNodeSize;
         background: linear-gradient(135deg, $typeColor1 0%, darken($typeColor1, 20%) 100%);
         border-radius: $edgeNodeSize;
         box-shadow: 4px 4px 4px $gray0;

         label {
            display: block;
            position: relative;
            width: 200px;
            left: -100px + $edgeNodeSize/2;
            text-align: center;
            text-shadow: 4px 4px 4px $gray0;
            top: $edgeNodeSize + 2px;
            font-family: $fontFamilyLabel;
            font-size: $fontSizeLabel;
         }

      }

      &.selected {
         box-shadow: 0px 0px 8px #fff, 4px 4px 4px $gray0;
      }
   }

   .GHOST {
      position: absolute;
   }

   .links {
      .link {
         position: absolute;
         fill: transparent;
      }
      .link {
         stroke-width: 2;
         stroke: $typeColor1;
      }
      .link.selected {
         stroke: lighten( $typeColor1, 15 );
      }
   }
}


// Ghost entries (for ui-handles during active drag operations):
.graph {

   // Ghosts are made visible on user interaction
   .GHOST {
      // display: none;
   }

   .link.edge.GHOST {
      // color: greenyellow;
   }

}




// User Theme:

.graph {

   .port.FLAG > i {
      // use default
   }

   .port.ACTION > i {
      background: $typeColor2;
   }

   .port.RESOURCE > i {
      background: $typeColor3;
   }

   .node.edge.FLAG {
      // use default
   }

   .node.edge.ACTION {
      background: -moz-linear-gradient(left top,
         $typeColor2 0%, darken($typeColor2, 20%) 100%);
      background: -webkit-gradient(linear, left top, right bottom,
         color-stop(0%, $typeColor2), color-stop(100%, darken($typeColor2, 30%)));
   }

   .node.edge.RESOURCE {
      background: -moz-linear-gradient(left top,
         $typeColor3 0%, darken($typeColor3, 20%) 100%);
      background: -webkit-gradient(linear, left top, right bottom,
         color-stop(0%, $typeColor3), color-stop(100%, darken($typeColor3, 30%)));
   }

   .link.FLAG {
      // use default
   }

   .link.ACTION {
      stroke: $typeColor2;
      &.selected {
         stroke: lighten( $typeColor2, 15 );
      }
   }


   .link.RESOURCE {
      stroke: $typeColor3;
      &.selected {
         stroke: lighten( $typeColor3, 15 );
      }
   }

   .port.FLAG {
      // use default
   }

   .port.ACTION i {
      background: $typeColor2;
   }

   .port.RESOURCE i {
      background: $typeColor3;
   }
}

.graph.highlight-in {
   .ports.out i {
      background: $unHighlightColor;
   }
}

.graph.highlight-out {
   .ports.in i {
      background: $unHighlightColor;
   }
}

.graph.highlight-FLAG {
   .port:not(.FLAG) > i,
   .node.edge:not(.FLAG) {
      background: $unHighlightColor;
   }
   .link:not(.FLAG) {
      stroke: $unHighlightColor;
   }
}

.graph.highlight-ACTION {
   .port:not(.ACTION) > i,
   .node.edge:not(.ACTION) {
      background: $unHighlightColor;
   }
   .link:not(.ACTION) {
      stroke: $unHighlightColor;
   }
}

.graph.highlight-RESOURCE {
   .port:not(.RESOURCE) > i,
   .node.edge:not(.RESOURCE) {
      background: $unHighlightColor;
   }
   .link:not(.RESOURCE) {
      stroke: $unHighlightColor;
   }
}
